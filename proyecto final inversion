// ahs1.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include"stdio.h"
#include"conio.h"
#include"stdlib.h"
#include<string>
#include<iostream>
using namespace std;

struct tipo_Investment
{
	int no_inversion;
	char fecha[10];
	int Proyecto;
	float Monto;
	int Inversionista;
};
tipo_Investment inversion;
FILE *alias;


void CONSULTA_SECUENCIAL(void)
{
int no_inversion;
system("cls");
cout << "\n\rCONSULTA DE REGISTROS DE PRODUCTOS";
alias=fopen("PRODUCTO.SEC","rb"); // Intenta abrir el archivo PRODUCTO.SEC
// en modo de solo lectura
if(alias==NULL)
{
cout << "\n\n\n\rNo existe el archivo !!!";
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
}
cout << "\n\n\n\rNumero de producto: "; cin >> no_inversion;
fread(&inversion,sizeof(inversion),1,alias); 
 // Lee el "Registro", de tamano=sizeof(Registro) del archivo "alias"
while(!feof(alias))
{
	if(inversion.no_inversion==no_inversion)
{cout<< "\n\rINVERSIONES:";
cout << "\n\rID Inversion  Fecha    ID Proyecto   Monto   ID Inversionista";
cout << "\n\r------------------------------------------------------------------------";
printf("\n\r    %3d\t    %3s\t %3d\t  $%4.2f\t%d",inversion.no_inversion,inversion.fecha,inversion.Proyecto,inversion.Monto,inversion.Inversionista);
fclose(alias);
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
}
fread(&inversion,sizeof(inversion),1,alias);
}
cout << "\n\rNo se encuentra ese registro !!!";
fclose(alias); // Cierra el archivo
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
} 

void LISTADO_SECUENCIAL(void)
{
system("cls");
cout << "\n\rLISTADO DE REGISTROS DE PRODUCTOS";
alias=fopen("PRODUCTO.SEC","rb"); // Intenta abrir el archivo PRODUCTO.SEC
// en modo de solo lectura
if(alias==NULL)
{
cout << "\n\n\n\rNo existe el archivo !!!";
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
}cout<< "\n\rINVERSIONES:";
cout << "\n\rID Inversion  Fecha    ID Proyecto   Monto   ID Inversionista";
cout << "\n\r------------------------------------------------------------------------";
fread(&inversion,sizeof(inversion),1,alias);
// Lee el "Registro", de tamano=sizeof(Registro) del archivo "alias"
while(!feof(alias)) // Ciclo mientras no se encuentre el final del archivo
{if(inversion.no_inversion !=0) printf("\n\r    %3d\t    %3s\t %3d\t  $%4.2f\t%d",inversion.no_inversion,inversion.fecha,inversion.Proyecto,inversion.Monto,inversion.Inversionista);
fread(&inversion,sizeof(inversion),1,alias);
}
fclose(alias); // Cierra el archivo
cout << "\n\r------------------------------------------------------------------------";
cout << "\n\rFin del listado !!!";
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return; 
}

void ALTA_DIRECTA(void)
{
int no_inversion; // Variable local para el numero de producto
system ("cls");
cout << "\n\rALTAS DE REGISTROS DE PRODUCTOS";
alias=fopen("PRODUCTO.SEC","rb+"); // Intenta abrir el archivo PRODUCTO.DIR// en modo de lectura/escritura
if(alias==NULL)
alias=fopen("PRODUCTO.SEC","wb"); // Crea el archivo en caso de noexistir
cout << "\n\n\n\rNumero de Inversion: ";
cin >> no_inversion;
int dir_fisica=no_inversion*sizeof(inversion); // Calculo de la dir. fisica
fseek(alias,dir_fisica,SEEK_SET); //Posicionar el apuntador del archivo
fread(&inversion,sizeof(inversion),1,alias); // Lee el "Registro", de tamano=sizeof(Registro) del archivo "alias"
if(inversion.no_inversion==no_inversion)
        {cout << "\n\n\n\rRegistro duplicado !!!";
        fclose(alias);
        getch();
        return;
        }
getchar();
cout << "\n\rFecha: ";
gets(inversion.fecha);
cout << "\n\rID Proyecto : ";
cin >> inversion.Proyecto;
cout << "\n\rMonto : ";
cin >> inversion.Monto;
cout << "\n\rID Inversionista: ";
cin >> inversion.Inversionista;
   
inversion.no_inversion=no_inversion;

fseek(alias,dir_fisica,SEEK_SET); //Posicionar el apuntador del archivo
fwrite(&inversion,sizeof(inversion),1,alias); // Grabar el Registro completo
fclose(alias); // Cierra el archivo
cout << "\n\n\n\rProducto registrado !!!";
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
}
void BAJA_LOGICA_DIRECTA(void) 
{ 
 int no_inversion; // Variable local para el numero de producto que desea eliminar 
 char op; 
 system("cls"); 
 cout << "\n\rBAJA LOGICA DE REGISTROS DE PRODUCTOS"; 
 alias=fopen("PRODUCTO.SEC","rb+"); // Intenta abrir el archivo PRODUCTO.DIR 
 // en modo de lectura/escritura 
 
 if(alias==NULL) // Valida la existencia del archivo 
 { 
 cout << "\n\n\n\rNo existe el archivo !!!"; 
 cout << "\n\r<<< Oprima cualquier tecla para continuar >>>"; 
 getch(); 
 return; 
 } 
 cout << "\n\n\n\rNumero de Inversion: "; cin >> no_inversion; 
int dir_fisica=no_inversion*sizeof(inversion); // Calculo de la dir. fisica 
 fseek(alias,dir_fisica,SEEK_SET); //Posicionar el apuntador del archivo
 fread(&inversion,sizeof(inversion),1,alias); 
 // Lee el "Registro", de tamano=sizeof(Registro) del archivo "alias"
 if(inversion.no_inversion==no_inversion) 
 {cout<< "\n\rINVERSIONES:"; 
 cout << "\n\rID Inversion  Fecha    ID Proyecto   Monto   ID Inversionista"; 
 cout << "\n\r------------------------------------------------------------------------";
printf("\n\r    %3d\t    %3s\t %3d\t  $%4.2f\t%d",inversion.no_inversion,inversion.fecha,inversion.Proyecto,inversion.Monto,inversion.Inversionista); 
inversion.no_inversion=0; 
strcpy(inversion.fecha,""); 
inversion.Proyecto=0; 
inversion.Monto=0.0; 
inversion.Inversionista=' '; 
 // Es necesario reposicionar el apuntador del archivo al principio del 
 // registro que desea modificar, ya que al leer un registro, el 
 // apuntador se posiciona en el registro siguiente 
 // La funcion ftell(alias) devuelve la posicion donde se encuentra el 
 // apuntador 
 do 
 { 
 cout << "\n\rEsta seguro que desea eliminar este registro? [S/N] ---> "; 
 op=toupper(getche()); 
 }while(op!='S' && op!='N'); 
 if(op=='S') 
 { 
 fseek(alias,dir_fisica,SEEK_SET); //Posicionar el apuntador del archivo 
 fwrite(&inversion,sizeof(inversion),1,alias); // Graba el registro con 
 // los nuevos campos 
 cout << "\n\n\n\rRegistro eliminado logicamente !!!"; 
 } 
 else 
 { 
 cout << "\n\n\n\rRegistro NO eliminado !!!"; 
 } 
 fclose(alias); // Cierra el archivo 
 cout << "\n\r<<< Oprima cualquier tecla para continuar >>>"; 
 getch(); 
 return; 
 } 
 else 
 { 
 cout << "\n\n\n\rNo se encuentra ese registro !!!"; 
 } 
 fclose(alias); // Cierra el archivo 
 cout << "\n\n\n\n\r<<< Oprima cualquier tecla para continuar >>>"; 
 getch(); 
 return; 
} 
void MODIFICACION_SECUENCIAL(void)
{
int no_inversion; // Variable local para el numero de producto que desea modificar

cout << "\n\rMODIFICACION DE REGISTROS DE PRODUCTOS";
alias=fopen("PRODUCTO.SEC","rb+"); // Intenta abrir el archivo PRODUCTO.SEC
// en modo de lectura/escritura
if(alias==NULL) // Valida la existencia del archivo
{
cout << "\n\n\n\rNo existe el archivo !!!";
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
}
cout << "\n\n\n\rNumero de Inversion: "; cin >> no_inversion;
fread(&inversion,sizeof(inversion),1,alias);
// Lee el "Registro", de tamano=sizeof(Registro) del archivo "alias"
while(!feof(alias)) // Ciclo mientras no se encuentre el final del archivo
{
	if(inversion.no_inversion==no_inversion)
{cout<< "\n\rINVERSIONES:";
cout << "\n\rID Inversion  Fecha    ID Proyecto   Monto   ID Inversionista";
cout << "\n\r------------------------------------------------------------------------";
printf("\n\r    %3d\t    %3s\t %3d\t  $%4.2f\t%d",inversion.no_inversion,inversion.fecha,inversion.Proyecto,inversion.Monto,inversion.Inversionista);
getchar();
cout << "\n\n\n\rAnote los nuevos datos ...";
cout << "\n\rFecha: "; gets(inversion.fecha);
cout << "\n\rID_Proyecto : "; cin >> inversion.Proyecto;
cout << "\n\rMonto : "; cin >> inversion.Monto;

// Es necesario reposicionar el apuntador del archivo al principio Manejo de Archivos en Lenguaje C++ Ing. Bruno LÃ³pez Takeyas , M.C. 50 del
// registro que desea modificar, ya que al leer un registro, el
// apuntador se posiciona en el registro siguiente
// La funcion ftell(alias) devuelve la posicion donde se encuentra el
// apuntador
fseek(alias,ftell(alias)-sizeof(inversion),SEEK_SET);
fwrite(&inversion,sizeof(inversion),1,alias); // Graba el registro con
// los nuevos campos
fclose(alias); // Cierra el archivo
cout << "\n\n\n\rRegistro modificado !!!";
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
}
fread(&inversion,sizeof(inversion),1,alias);
}
cout << "\n\rNo se encuentra ese registro !!!";
fclose(alias); // Cierra el archivo
cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
getch();
return;
} 


void main() 
{int a=0;
do{
system("cls");

// captura de campos
int c;
cout<< "\n\nIngreso de Nueva Inversion-> 1";
cout<< "\n\nBaja de Inversion----------> 2";
cout<< "\n\nConsulta de Inversiones----> 3";
cout<< "\n\nLista de Inversiones-------> 4";
cout<< "\n\nModificacion---------------> 5";
cout<< "\n\nOpcion: ";
cin>> c;

switch(c)
{
case 1:ALTA_DIRECTA();
break;
case 2:BAJA_LOGICA_DIRECTA();
break;
case 3:CONSULTA_SECUENCIAL();
break;
case 4:LISTADO_SECUENCIAL();
break;
case 5: MODIFICACION_SECUENCIAL();
break;
default: cout<< "SALIR";a=1;
break;
}
}while(a!=1);
getch();
}
